/**
 * Generated by JHipster IDE plugin
 */
 
application {
	config {
		baseName search
		packageName com.dhomoni.search
		applicationType microservice
		authenticationType uaa
		uaaBaseName "uaa"
		databaseType sql
		devDatabaseType h2Disk
		prodDatabaseType postgresql
		cacheProvider hazelcast
		serviceDiscoveryType eureka
		messageBroker kafka
		searchEngine elasticsearch
		serverPort 8081
		testFrameworks [cucumber, gatling]
		clientFramework react
		buildTool maven
		languages [en, bn]
  	}
	entities *
}

entity Doctor {
  	registrationId Long unique
  	firstName String
	lastName String
	email String
  	phone String
  	licenceNumber String required
  	nationalId String
  	passportNo String
	type DoctorType
	designation String
	description TextBlob
	address String
//	location Point
	image ImageBlob
	activated Boolean
}

enum DoctorType {
	PHYSICIAN, 
	SURGEON
}

entity MedicalDepartment {
	name String required
}

relationship OneToOne {
	Doctor{medicalDepartment} to MedicalDepartment
}

entity Disease {
	id UUID required
	medicalName String required
	generalName String required
}

entity Symptom {
	name String
}

relationship OneToMany {
	Disease{symptoms} to Symptom
}

relationship OneToMany {
	MedicalDepartment{diseases} to Disease{medicalDepartment}
}

entity Chamber {
	address String
	phone String
	fee Double
//	location Point
}

relationship OneToMany {
	Doctor{chambers} to Chamber
}

entity WeeklyVisitingHour {
	weekDay WeekDay
	startHour Integer min(0) max(23)
	startMinute Integer min(0) max(59)
	endHour Integer min(0) max(23)
	endMinute Integer min(0) max(59)
}

enum WeekDay {
    SUN, 
    MON, 
    TUES, 
    WED, 
    THURS, 
    FRI, 
    SAT
}

relationship OneToMany {
	Chamber{weeklyVisitingHours} to WeeklyVisitingHour
}

entity ProfessionalDegree {
	name String
	institute String
	country String
	enrollmentYear Integer
	passingYear Integer
}

relationship OneToMany {
	Doctor{professionalDegrees} to ProfessionalDegree
}

entity Patient {
	registrationId Long unique
	firstName String
	lastName String
	email String
	phone String
	sex Sex
    birthTimestamp Instant
    bloodGroup BloodGroup
    weightInKG Double
    heightInInch Double
	address String
	image ImageBlob
//	location Point
	activated Boolean
}

enum BloodGroup {
	A_POSITIVE,
	A_NEGATIVE,
	B_POSITIVE,
	B_NEGATIVE,
	O_POSITIVE,
	O_NEGATIVE,
	AB_POSITIVE,
	AB_NEGATIVE
}

enum Sex {
	MALE,
	FEMALE
}

entity Medicine {
	id UUID required
	tradeName String required
	unitQuantity String
	genericName String required
	chemicalName String required
	formulation Formulation
	manufacturer String required
	mrp Double
	doseAndAdmin String
	preparation String
	productUrl String
	active Boolean
}

entity Indication {
	name String
}

relationship OneToMany {
	Medicine{indications} to Indication
}

enum Formulation {
	TABLET,
	CAPSULE,
	SYRUP,
	INJECTION,
	INJECTION_IV,
	SALINE,
	ORAL_SALINE
}

search Doctor, Patient, Medicine, Disease with elasticsearch
dto * with mapstruct
service * with serviceClass
filter *
paginate * with infinite-scroll